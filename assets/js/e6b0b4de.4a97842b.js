"use strict";(self.webpackChunkmobile_pay_merchant_payments_documentation=self.webpackChunkmobile_pay_merchant_payments_documentation||[]).push([[2091],{95788:(e,t,n)=>{n.d(t,{Iu:()=>u,yg:()=>y});var a=n(11504);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87768:(e,t,n)=>{n.d(t,{c:()=>i});var a=n(11504),o=n(14971);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.c)(r.tabItem,i),hidden:n},t)}},61268:(e,t,n)=>{n.d(t,{c:()=>T});var a=n(45072),o=n(11504),r=n(14971),i=n(53943),l=n(55592),s=n(10632),p=n(27128),u=n(21148);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function d(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.w)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.Uz)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._M)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,p]=y({queryString:n,groupId:a}),[c,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,u.IN)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),b=(()=>{const e=s??c;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),g(e)}),[p,g,r]),tabValues:r}}var b=n(93664);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.MV)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==l&&(c(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.c)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.c)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,r.c)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=g(e);return o.createElement("div",{className:(0,r.c)("tabs-container",h.tabList)},o.createElement(f,(0,a.c)({},e,t)),o.createElement(v,(0,a.c)({},e,t)))}function T(e){const t=(0,b.c)();return o.createElement(w,(0,a.c)({key:String(t)},e))}},88048:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=n(45072),o=(n(11504),n(95788)),r=n(97500);const i={sidebar_position:2},l="Testing",s={unversionedId:"app-payments/development-guide/test",id:"app-payments/development-guide/test",title:"Testing",description:"This page includes information to make sure your integration works as planned. Testing activities will be done in a sandbox environment and it won't create any real payments.",source:"@site/docs/app-payments/development-guide/test.mdx",sourceDirName:"app-payments/development-guide",slug:"/app-payments/development-guide/test",permalink:"/docs/app-payments/development-guide/test",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Getting started",permalink:"/docs/app-payments/development-guide/getting-started"},next:{title:"Verification",permalink:"/docs/app-payments/development-guide/verification"}},p={},u=[{value:"MobilePay sandbox environment",id:"mobilepay-sandbox-environment",level:2},{value:"Test merchants",id:"test-merchants",level:2},{value:"Test users",id:"test-users",level:2},{value:"Test app",id:"test-app",level:2},{value:"Integration tests",id:"integration-tests",level:2}],c={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.yg)(d,(0,a.c)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"testing"},"Testing"),(0,o.yg)("p",null,"This page includes information to make sure your integration works as planned. Testing activities will be done in a sandbox environment and it won't create any real payments."),(0,o.yg)("h2",{id:"mobilepay-sandbox-environment"},"MobilePay sandbox environment"),(0,o.yg)("p",null,"The sandbox environment is dedicated for integration purposes. It is the same as production with some limitations (not a full list):"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"No actual payments and reservations are made.")),(0,o.yg)("h2",{id:"test-merchants"},"Test merchants"),(0,o.yg)("p",null,"You will receive details for a test merchant to use in a sandbox environment during your onboarding. It will allow you to login to ",(0,o.yg)("a",{parentName:"p",href:"https://sandprod-portal.mobilepay.dk/"},"Sandbox MobilePay portal")," to ",(0,o.yg)("a",{parentName:"p",href:"/docs/app-payments/authentication"},"generate API keys"),", and/or to ",(0,o.yg)("a",{parentName:"p",href:"/docs/app-payments/payment-points"},"set up Payment Points")," for your testing purposes. It is a valuable experience since you will need to do the same activities when moving to production."),(0,o.yg)("h2",{id:"test-users"},"Test users"),(0,o.yg)("p",null,"You will receive information about test users during your onboarding. You will have a dedicated test user which you will be able to use to login into ",(0,o.yg)("a",{parentName:"p",href:"#test-app"},"MobilePay Test App")),(0,o.yg)("h2",{id:"test-app"},"Test app"),(0,o.yg)("p",null,"In order to complete a payment flow in the sandbox environment, a test version of the MobilePay app is available. This version of the MobilePay app is similar to the live version, but only supports payments in the sandbox environment. You can only use the test users that we provide to you."),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Do not use the test phone number in the production environment, as it might be a real user there.")),(0,o.yg)(r.cp,{mdxType:"TestApp"}),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},(0,o.yg)("strong",{parentName:"p"},"MobilePay Sandbox")," app supports not only it's own schema ",(0,o.yg)("inlineCode",{parentName:"p"},"mobilepay-test://")," but also the production schema ",(0,o.yg)("inlineCode",{parentName:"p"},"mobilepay://"),". This means that some of you may experience issues in iOS when trying to make a real production payment, sandbox app would open.\nTo circumvent this you could try closing MobilePay Sandbox app and opening MobilePay so that it's running in the background while doing the production payment. Read more on how to close an app: ",(0,o.yg)("a",{parentName:"p",href:"https://support.apple.com/en-us/HT201330"},"https://support.apple.com/en-us/HT201330"),".")),(0,o.yg)("h2",{id:"integration-tests"},"Integration tests"),(0,o.yg)("p",null,"We also have a Payments Testing API in sandbox environment, which has only one endpoint for simulating user's swipe in MobilePay app. You can use that to setup integration tests or in any other way where it fits you."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Simulate user swiping and confirming the payment in MobilePay app."',title:'"Simulate',user:!0,swiping:!0,and:!0,confirming:!0,the:!0,payment:!0,in:!0,MobilePay:!0,'app."':!0},"curl https://api.sandbox.mobilepay.dk/v1/integration-test/payments/{PAYMENT_ID}/reserve \\\n  -X POST \\\n  -H 'Authorization: Bearer {API_KEY}' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"paymentSourceId\": {UUID},\n    \"userId\": {UUID}\n  }'\n")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"paymentSourceId")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"userId")," are unique for your test users. You will receive these values during onboarding."))}m.isMDXComponent=!0},97500:(e,t,n)=>{n.d(t,{cp:()=>p});var a=n(45072),o=(n(11504),n(95788)),r=n(61268),i=n(87768);const l={toc:[{value:"Log on to test app",id:"log-on-to-test-app",level:3}]},s="wrapper";function p(e){let{components:t,...n}=e;return(0,o.yg)(s,(0,a.c)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)(r.c,{defaultValue:"android",values:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],mdxType:"Tabs"},(0,o.yg)(i.c,{value:"android",mdxType:"TabItem"},(0,o.yg)("p",null,"To install, you will have to allow installation from \u201cunknown sources\u201d."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://install.appcenter.ms/orgs/mobilepay-apps/apps/mobilepay-dk-android-sandbox/distribution_groups/external"},"MobilePay DK Sandbox app")),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://install.appcenter.ms/orgs/mobilepay-apps/apps/mobilepay-fi-android-sandbox/distribution_groups/external"},"MobilePay FI Sandbox app"))),(0,o.yg)(i.c,{value:"ios",mdxType:"TabItem"},(0,o.yg)("p",null,"iOS MobilePay Sandbox app is available through Apple TestFlight. Therefore Apple TestFlight must be installed to the device.  Using below link on a mobile device will initiate download of and registration to TestFlight. No prior registration or invitation needed.\nPlease open below link on your mobile device:"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://testflight.apple.com/join/xarydQZ4"},"MobilePay DK Sandbox app")),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://testflight.apple.com/join/hP92EaBR"},"MobilePay FI Sandbox app")))),(0,o.yg)("h3",{id:"log-on-to-test-app"},"Log on to test app"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Install and open the MobilePay DK/FI Vendor app"),(0,o.yg)("li",{parentName:"ol"},'Select "Log p\xe5 (Eksisterende bruger)" / "Kirjaudu sovellukseen / "Log on (existing user)"'),(0,o.yg)("li",{parentName:"ol"},"Enter a valid Sandbox phone number (see below section about test users)"),(0,o.yg)("li",{parentName:"ol"},"Enter SSN (Only relevant on fresh install)",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Denmark CPR no.: 000000-0000"),(0,o.yg)("li",{parentName:"ul"},"Finland henkil\xf6tunnus: 00000000000"))),(0,o.yg)("li",{parentName:"ol"},"Enter PIN: \u201c1234\u201d"),(0,o.yg)("li",{parentName:"ol"},'Enter activation code: \u201c123456\u201d and press "OK" / "Jatka"')))}p.isMDXComponent=!0}}]);