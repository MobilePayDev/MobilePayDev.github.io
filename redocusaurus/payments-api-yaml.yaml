openapi: 3.0.3
info:
  title: App payments
  description: |
    # General notes

    All dates use the (`ISO 8601-1:2019`) format.<br>
    Date-time format - `YYYY-MM-DDTHH:mm:ssZ` or `YYYY-MM-DDTHH:mm:ss+00:00`.
  contact:
    email: developer@mobilepay.dk
servers:
  - url: https://api.mobilepay.dk
    description: Production server (uses **live** data)
  - url: https://api.sandbox.mobilepay.dk
    description: Production server (uses **test** data)
tags:
  - name: Payments
    description: >-
      Payments API makes it easy for you to collect money from your customers
      using MobilePay.
  - name: Payment points
  - name: Refunds
    description: >-
      Refunds API makes it easy for you to refund payments to your customers.
      You can refund only those payments that were created via payments API
      above.
paths:
  /v1/payments:
    parameters:
      - $ref: '#/components/parameters/correlationIdParam'
    post:
      summary: initiate new payment
      tags:
        - Payments
      operationId: initiate-payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiatePaymentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      deprecated: true
      summary: fetch a list of payments
      tags:
        - Payments
      operationId: get-payments-list
      description: >
        Returns a list of all merchant's payments if no filters are provided in
        query parameters. Can also return only payments of a specific payment
        point if `paymentPointId` is provided.
      parameters:
        - name: paymentPointId
          in: query
          description: Filter payments of a specific payment point
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of payments to be returned.
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
            maximum: 1000
        - name: stateFilter
          in: query
          description: Filter payments by state.
          schema:
            type: array
            items:
              enum:
                - initiated
                - reserved
                - captureStarted
                - captured
                - cancelledByMerchant
                - cancelledByUser
                - cancelledBySystem
              type: string
        - name: startDate
          in: query
          description: Filter payments by `InitiatedOn` property.
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter payments by `InitiatedOn` property.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '409':
          description: Conflict
  /v1/payments/{paymentid}:
    parameters:
      - $ref: '#/components/parameters/correlationIdParam'
    get:
      summary: fetch single payment
      tags:
        - Payments
      operationId: get-single-payment
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSinglePaymentResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Conflict
  /v1/payments/{paymentid}/capture:
    parameters:
      - $ref: '#/components/parameters/correlationIdParam'
    post:
      summary: capture payment
      tags:
        - Payments
      operationId: capture-payment
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapturePaymentRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/payments/{paymentid}/cancel:
    parameters:
      - $ref: '#/components/parameters/correlationIdParam'
    post:
      summary: cancel payment
      tags:
        - Payments
      operationId: cancel-payment
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/payments/cancel:
    parameters:
      - $ref: '#/components/parameters/correlationIdParam'
    post:
      summary: cancel payment using idempotency key
      tags:
        - Payments
      operationId: cancel-payment-idempotency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPaymentRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/integration-test/payments/{paymentid}/reserve:
    parameters:
      - $ref: '#/components/parameters/correlationIdParam'
    post:
      summary: simulates payment confirmation
      tags:
        - Payments
      operationId: simulate-confirmation
      description: >-
        Simulate user swiping and confirming the payment (**available only in
        sandbox environment**).
      servers:
        - url: https://api.sandbox.mobilepay.dk
          description: This endpoint is available only in sandbox environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveFundsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/paymentpoints:
    get:
      summary: fetch a list of payment points
      tags:
        - Payment points
      operationId: get-payment-points
      description: |
        Returns a list of all merchant's payment points.
      parameters:
        - name: pageNumber
          in: query
          description: Values that are less than 1 will be replaced by 1.
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of payment points to be returned.
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
            maximum: 1000
        - name: CorrelationId
          in: header
          description: >-
            Correlation id used for logging (if you don't pass any value, we'll
            generate it)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPointsList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /v1/refunds:
    post:
      summary: issue new refund
      tags:
        - Refunds
      operationId: issue-refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueRefundRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRefundResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      deprecated: true
      summary: fetch a list of refunds
      tags:
        - Refunds
      operationId: get-refunds-list
      parameters:
        - name: paymentId
          in: query
          description: Filter refunds of specific payment
          schema:
            type: string
            format: uuid
        - name: paymentPointId
          in: query
          description: Filter refunds of specific payment point
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: Values that are less than 1 will be replaced by 1.
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of refunds to be returned.
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
        - name: createdBefore
          in: query
          description: Filter refunds by CreatedOn property.
          schema:
            type: string
            format: date-time
        - name: createdAfter
          in: query
          description: Filter refunds by CreatedOn property.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefundsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /v1/refunds/{refundid}:
    get:
      summary: fetch single refund
      tags:
        - Refunds
      operationId: get-refund
      parameters:
        - name: refundid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleRefundResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
components:
  parameters:
    correlationIdParam:
      name: CorrelationId
      in: header
      required: false
      description: >-
        Correlation id used for logging (if you don't pass any value, we'll
        generate it)
      schema:
        type: string
        format: uuid
  schemas:
    CancelPaymentRequest:
      required:
        - idempotencyKey
      type: object
      properties:
        idempotencyKey:
          type: string
          description: >-
            The idempotency key identifying the payment to be canceled. Only
            payments in the `initiated` state can be canceled using the
            idempotency key.
          format: uuid
    CapturePaymentRequest:
      required:
        - amount
      type: object
      properties:
        amount:
          type: integer
          description: "The amount to be captured. A positive integer representing how much to capture in the smallest currency unit (e.g.,\r\n100 cents to capture €1.00). The minimum amount is 1."
          format: int32
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
          example: '1234'
        message:
          type: string
          nullable: true
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        correlationId:
          type: string
          example: 91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd
        origin:
          type: string
          example: MPY
    GetPaymentsResponse:
      required:
        - pageSize
        - payments
      type: object
      properties:
        pageSize:
          type: integer
          description: The number of payments per page. The range is 1 to 1000.
          format: int32
          example: 1
        nextPageNumber:
          type: integer
          description: >-
            A number of the next page. The null value indicates that the
            response has the last page.
          format: int32
          nullable: true
          example: 2
        payments:
          type: array
          items:
            $ref: '#/components/schemas/GetSinglePaymentResponse'
          description: The requested list of payments.
          example:
            - PaymentId: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
              Amount: 1250
              Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              PaymentPointId: 7347ba06-95c5-4181-82e5-7c7a23609a0e
              Reference: My-Payment-1
              RedirectUri: myapp://redirect
              State: initiated
              InitiatedOn: '2022-05-26T13:13:49.700746+03:00'
              LastUpdatedOn: '2022-05-26T13:13:49.700747+03:00'
              MerchantId: 655ad36f-70b0-4add-a123-b943daca50e8
              IsoCurrencyCode: DKK
              PaymentPointName: MyPaymentPoint
    GetSinglePaymentResponse:
      required:
        - amount
        - initiatedOn
        - isoCurrencyCode
        - lastUpdatedOn
        - merchantId
        - paymentId
        - paymentPointId
        - paymentPointName
        - redirectUri
        - state
      type: object
      properties:
        paymentId:
          type: string
          description: The ID of the payment.
          format: uuid
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        amount:
          type: integer
          description: >
            The amount of money to be collected by this payment.


            A positive integer representing how much to charge in the smallest
            currency unit (e.g., 100 cents to charge €1.00). The minimum amount
            is 1. The maximum amount is defined by user's daily/yearly limits.
          format: int32
          minimum: 1
          example: 1250
        description:
          type: string
          description: "Optional payment information to be displayed in MobilePay app to the customer. This can be, for example, an invoice\r\nnumber, ticket number, or short description that uniquely identifies the purchase."
          nullable: true
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        paymentPointId:
          type: string
          description: The payment point on which payment was initiated.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        reference:
          type: string
          description: Payment's reference provided by you.
          nullable: true
          example: My-Payment-1
        redirectUri:
          type: string
          description: >-
            Deeplink is used to redirect MobilePay users back to the merchant's
            app.
          example: myapp://redirect
        state:
          enum:
            - initiated
            - reserved
            - captureStarted
            - captured
            - cancelledByMerchant
            - cancelledByUser
            - cancelledBySystem
          type: string
          description: Indicates payment's current state.
          example: initiated
        initiatedOn:
          type: string
          description: "The timestamp of when the payment was created, in ISO 8601-1:2019 format.<br />\r\nExamples for July 19th, 2021 12:42:38am Pacific Standard Time:<br />\r\nUTC: 2021-07-19T12:42:38Z"
          format: date-time
          example: '2022-05-26T13:13:49.700315+03:00'
        lastUpdatedOn:
          type: string
          description: >-
            The timestamp of when the payment was created, in ISO 8601-1:2019
            format.
          format: date-time
          example: '2022-05-26T13:13:49.700318+03:00'
        merchantId:
          type: string
          description: Merchant ID associated with the payment.
          format: uuid
          example: 655ad36f-70b0-4add-a123-b943daca50e8
        isoCurrencyCode:
          type: string
          description: "Three-letter <a href=\"https://www.iso.org/iso-4217-currency-codes.html\">ISO currency code</a>, in uppercase.<br />\r\nPossible values:<br />\r\n\"DKK\",<br />\r\n\"EUR\""
          example: DKK
        paymentPointName:
          type: string
          description: Payment point name displayed to the user in MobilePay app.
          example: MyPaymentPoint
    InitiatePaymentRequest:
      required:
        - amount
        - idempotencyKey
        - paymentPointId
        - redirectUri
        - reference
      type: object
      properties:
        amount:
          type: integer
          description: "The amount of money to be collected by this payment.\r\nA positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge\r\n€1.00). The minimum amount is 1. The maximum amount is defined by user's daily/yearly limits."
          format: int32
          example: 1250
        description:
          maxLength: 200
          minLength: 0
          type: string
          description: "Optional payment information to be displayed in MobilePay app to the customer. Max length: 200 characters.<br />\r\nThis can be, for example, an invoice number, ticket number, or short description that uniquely identifies the\r\npurchase."
          nullable: true
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        paymentPointId:
          type: string
          description: The Payment Point ID to associate with a payment.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        reference:
          maxLength: 64
          minLength: 0
          type: string
          description: "An ID to associate with the payment. Max length: 64 characters.<br />\r\nYou can use this field to associate the payment to an entity in an external system (for example, you might specify\r\nan order ID that is generated by your system). It is recommended to use a unique value for each payment."
          example: My-Payment-1
        idempotencyKey:
          type: string
          description: "A unique value that identifies this InitiatePayment request. Must be a valid GUID, and is used to protect against\r\naccidental duplicate calls. Multiple requests with the same idempotency key have the same result."
          format: uuid
          example: fae7680f-9875-4ba9-8910-2f2e1791f390
        redirectUri:
          maxLength: 2000
          minLength: 0
          type: string
          description: "MobilePay will use the redirectUri URL to redirect the MobilePay user to the merchant's confirmation page once user\r\naction is completed in MobilePay app. Must be a valid URI."
          example: myapp://redirect
        customerPhoneNumber:
          maxLength: 15
          minLength: 0
          type: string
          description: >-
            MobilePay will use the (international) phone number to prefill the
            landing page for dual device flows. Ex. +4512345678
          nullable: true
          example: null
    InitiatePaymentResponse:
      required:
        - mobilePayAppRedirectUri
        - paymentId
      type: object
      properties:
        paymentId:
          type: string
          description: A unique ID for the payment.
          format: uuid
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        mobilePayAppRedirectUri:
          type: string
          description: Deeplink to MobilePay app.
          example: >-
            https://products.mobilepay.dk/payments?id=c63bb028-7491-47df-88b6-c384597d7af8&payment_point_id=96769d52-2b8c-41e3-9e31-c92b927c93ae
    ReserveFundsRequest:
      required:
        - paymentSourceId
        - userId
      type: object
      properties:
        paymentSourceId:
          type: string
          format: uuid
          description: The id of payment source which should be used to obtain funds.
          example: 8b1def75-8f77-4a48-8924-bf2ab22251e6
        userId:
          type: string
          format: uuid
          description: The id of the user on whose behalf funds will be reserved.
          example: be1e6d64-b73d-481a-9947-55e57ccbe4cf
    IssueRefundRequest:
      required:
        - amount
        - idempotencyKey
        - paymentId
        - reference
      type: object
      properties:
        paymentId:
          type: string
          description: The ID of payment for which refund will be issued.
          format: uuid
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        amount:
          type: integer
          description: "The amount of money to refund. A positive integer representing how much to refund in the\r\nsmallest currency unit (e.g., 100 cents to charge €1.00). The minimum amount is 1. The maximum amount is equal to\r\nfull payment's amount."
          example: 1250
        description:
          maxLength: 200
          minLength: 0
          type: string
          description: "Optional refund information to be displayed in MobilePay app to the customer. Max length: 200 characters.<br />\r\nThis can be, for example, an invoice number, ticket number, or short description of the refund."
          nullable: true
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        reference:
          maxLength: 64
          minLength: 0
          type: string
          description: "An ID to associate with the refund. Max length: 64 characters.<br />\r\nYou can use this field to associate the refund to an entity in an external system (for example, you might specify\r\nan order ID that is generated by your system). It is recommended to use a unique value for each refund."
          example: My-Refund-1
        idempotencyKey:
          type: string
          description: "A unique value that identifies this request. Must be a valid GUID, and is used to protect against accidental\r\nduplicate calls. Multiple requests with the same idempotency key have the same result."
          format: uuid
          example: fae7680f-9875-4ba9-8910-2f2e1791f390
    IssueRefundResponse:
      type: object
      properties:
        refundId:
          type: string
          description: The ID of the refund.
          format: uuid
          nullable: true
          example: 7576910d-9789-4fef-a72e-877d89afec94
        paymentId:
          type: string
          description: The ID of payment for which refund was issued.
          format: uuid
          nullable: true
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        amount:
          type: integer
          description: "The amount of money refunded.<br />\r\nA positive integer representing how much was refunded in the smallest currency unit (e.g., 100 cents to charge\r\n€1.00)."
          nullable: true
          example: 1250
        description:
          type: string
          description: "Optional refund information to be displayed in MobilePay app to the customer. Max length: 200 characters.<br />\r\nThis can be, for example, an invoice number, ticket number, or short description of the refund."
          nullable: true
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        reference:
          type: string
          description: 'Refund''s reference provided by you. Max length: 64 characters.'
          nullable: true
          example: My-Refund-1
        createdOn:
          type: string
          description: "The timestamp of when the refund was created, in ISO 8601-1:2019 format.<br />\r\nExample for July 19th, 2021 14:42:38 Central European Summer Time:<br />\r\nUTC: 2021-07-19T12:42:38Z"
          format: date-time
          example: '2021-07-19T12:42:38+00:00'
        remainingAmount:
          type: integer
          description: "How much of the payment can still be refunded.<br />\r\nA positive integer representing how much can still be refunded in the smallest currency unit (e.g., 100 cents to\r\ncharge €1.00)."
          example: 250
    GetSingleRefundResponse:
      required:
        - amount
        - createdOn
        - isoCurrencyCode
        - merchantId
        - paymentId
        - paymentPointId
        - reference
        - refundId
      type: object
      properties:
        refundId:
          type: string
          description: The ID of the refund.
          format: uuid
          example: 7576910d-9789-4fef-a72e-877d89afec94
        paymentId:
          type: string
          description: The ID of payment for which refund was issued.
          format: uuid
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        amount:
          type: integer
          description: "The amount of money refunded. A positive integer representing how much was refunded in the\r\nsmallest currency unit (e.g., 100 cents to charge €1.00)."
          example: 1250
        description:
          type: string
          description: "Optional refund information to be displayed in MobilePay app to the customer. This can be, for example,\r\nan invoice number, ticket number, or short description of the refund."
          nullable: true
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        reference:
          type: string
          description: Refund's reference provided by you.
          example: My-Refund-1
        createdOn:
          type: string
          description: "The timestamp of when the refund was created, in ISO 8601-1:2019 format.<br />\r\nExample for July 19th, 2021 14:42:38 Central European Summer Time:<br />\r\nUTC: 2021-07-19T12:42:38Z"
          format: date-time
          example: '2021-07-19T12:42:38+00:00'
        paymentPointId:
          type: string
          description: The payment point on which refunded payment was initiated.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        merchantId:
          type: string
          description: Merchant id associated with the refund.
          format: uuid
          example: 655ad36f-70b0-4add-a123-b943daca50e8
        isoCurrencyCode:
          type: string
          enum:
            - DKK
            - EUR
          description: >-
            Three-letter <a
            href="https://www.iso.org/iso-4217-currency-codes.html">ISO currency
            code</a>, in uppercase.
          example: DKK
    GetRefundsResponse:
      required:
        - pageSize
        - refunds
      type: object
      properties:
        pageSize:
          type: integer
          description: The number of refunds per page. The range is 1 to 1000.
        nextPageNumber:
          type: integer
          description: >-
            A number of the next page. The null value indicates that the
            response has the last page.
          nullable: true
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/GetSingleRefundResponse'
          description: The requested list of refunds.
    PaymentPointsList:
      type: object
      properties:
        pageSize:
          type: integer
          description: >-
            Max number of payments that could have been returned. Only last page
            will contain fewer than max number of payments.
          format: int
          example: 1
        nextPageNumber:
          type: integer
          description: >-
            Number of the next page. This value should be sent as `pageNumber`
            value in next request. If last page is returned `nextPageNumber`
            value will be `null`.
          format: int
          nullable: true
          example: 2
        paymentPoints:
          type: array
          items:
            $ref: '#/components/schemas/PaymentPoint'
          description: List of payment points.
          example:
            - PaymentPointId: 7347ba06-95c5-4181-82e5-7c7a23609a0e
              PaymentPointName: MyPaymentPoint
              State: active
    PaymentPoint:
      type: object
      properties:
        paymentPointId:
          type: string
          description: Id of the payment point.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        paymentPointName:
          type: string
          description: Merchant-defined Payment Point name.
          nullable: true
          example: MyPaymentPoint
        state:
          enum:
            - created
            - active
          type: string
          description: The current state of the payment point.
          example: active
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      bearerFormat: API key
      description: >-
        Authorization header using the Bearer scheme, e.g., `Authorization:
        Bearer {api key}`
    openId:
      type: openIdConnect
      openIdConnectUrl: >-
        https://api.mobilepay.dk/merchant-authentication-openidconnect/.well-known/openid-configuration
      description: >-
        Obtain a consent from your client (with scope `merchantpayments`),
        retrieve an acess token and send it in `Authorization` header using the
        Bearer scheme,  e.g., `Authorization: Bearer {access token}`
security:
  - apiKey: []
  - openId:
      - merchantpayments
