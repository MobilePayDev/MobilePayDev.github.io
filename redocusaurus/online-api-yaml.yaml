openapi: 3.0.3
info:
  title: Online API
  contact:
    email: developer@vippsmobilepay.com
  version: v1
servers:
  - url: https://api.mobilepay.dk/cardpassthrough-restapi
    description: Production server (uses **live** data)
  - url: https://api.sandbox.mobilepay.dk/cardpassthrough-restapi
    description: Production server (uses **test** data)
tags:
  - name: Merchants
  - name: Payments
  - name: Simulation
    description: This api is only available for test data.
paths:
  /api/v1/merchants/{merchantId}:
    delete:
      tags:
        - Merchants
      summary: Delete merchant
      description: >-
        The merchant can no longer make payments, and is no longer eligible for
        subscription fee.
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '409':
          description: Domain error response
    get:
      tags:
        - Merchants
      summary: Get merchant
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantDetailsResponse'
        '409':
          description: Domain error response
  /api/v1/merchants:
    get:
      tags:
        - Merchants
      summary: Get merchants
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantListResponse'
        '409':
          description: Domain error response
    post:
      tags:
        - Merchants
      summary: Create merchant
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMerchantRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCreateResponse'
        '409':
          description: Domain error response
  /api/v1/payments/{paymentId}/authorizationattempts/{authorizationAttemptId}:
    patch:
      tags:
        - Payments
      summary: Update payment authorization
      description: >-
        Indicates that a successful authorization has been made, if 'succeeded'
        is set to true. The user will be shown a confirm message and redirected
        to RedirectFromMobilePayUrl
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: authorizationAttemptId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthorizationAttemptRequest'
      responses:
        '204':
          description: No Content
        '409':
          description: Domain error response
  /api/v1/payments/{paymentId}:
    patch:
      tags:
        - Payments
      summary: Update payment
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentRequest'
      responses:
        '204':
          description: No Content
        '409':
          description: Domain error response
  /api/v1/payments/{paymentId}/cancels:
    post:
      tags:
        - Payments
      summary: Cancel payment
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCancelRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCancelResponse'
        '409':
          description: Domain error response
  /api/v1/payments/{paymentId}/captures:
    post:
      tags:
        - Payments
      summary: Capture payment
      description: >-
        Create a capture. Multiple can be created. Amount must given in minor
        units of currency.
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaptureRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCaptureResponse'
        '409':
          description: Domain error response
  /api/v1/payments/{paymentId}/refunds:
    post:
      tags:
        - Payments
      summary: Refund payment
      description: >-
        Creates a refund. Multiple can be created. Amount must given in minor
        units of currency.
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRefundResponse'
        '409':
          description: Domain error response
  /api/v3/payments:
    post:
      tags:
        - Payments
      summary: Initiate payment
      description: |-
        A payment or checkout always start by initiating the payment.
        All provided urls MUST be https with TLS 1.2 or better.
         merchantName and merchantUrl are mandatory because those are used for Dynamic Linking.
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentV3Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiatePaymentResponse'
        '409':
          description: Domain error response
  /api/v1/product/payments/simulation/enter-phone-and-swipe/{paymentId}:
    post:
      tags:
        - Simulation
      summary: Simulate user behavior
      description: |-
        1) User enters phone number for payment.
        2) User selects the first eligible card for payment.
        3) User swipes to accept payment.
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulateRequestByAliasRequest'
      responses:
        '200':
          description: Success
        '409':
          description: Domain error response
    servers:
      - url: >-
          https://api.sandbox.mobilepay.dk/cardpassthrough-regressiontester-restapi
        description: User simulation server (uses **test** data)
  /api/v1/credentials:
    get:
      tags:
        - PSP Onboarding
      summary: Get Credentials
      description: >-
        Get IntegratorName, ClientName and Active Status for the specified
        x-ibm-client-Id
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '409':
          description: Domain error response
    post:
      tags:
        - PSP Onboarding
      summary: Create Credentials
      description: >-
        Generates, saves and returns a x-ibm-client-id and x-ibm-client-secret,
        used for calling product endpoints
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
      responses:
        '200':
          description: Success
        '409':
          description: Domain error response
    servers:
      - url: https://api.mobilepay.dk/cardpassthrough-kongonboarding-restapi
        description: Production server (uses **live** data)
      - url: >-
          https://api.sandbox.mobilepay.dk/cardpassthrough-kongonboarding-restapi
        description: Production server (uses **test** data)
  /api/v1/credentials/secret:
    patch:
      tags:
        - PSP Onboarding
      summary: Update secret
      description: Generates, replaces and returns a new x-ibm-client-secret
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: x-ibm-client-id
          in: header
          description: Client id for authentication
          required: true
          schema:
            type: string
        - name: x-ibm-client-secret
          in: header
          description: Client secret for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '409':
          description: Domain error response
    servers:
      - url: https://api.mobilepay.dk/cardpassthrough-kongonboarding-restapi
        description: Production server (uses **live** data)
      - url: >-
          https://api.sandbox.mobilepay.dk/cardpassthrough-kongonboarding-restapi
        description: Production server (uses **test** data)
components:
  schemas:
    CancelMITPaymentRequest:
      required:
        - amount
        - cancelIdentifier
        - timestamp
      type: object
      properties:
        cancelIdentifier:
          minLength: 1
          type: string
          description: The PSP's unique id of the cancel to ensure idempotency.
        amount:
          type: integer
          description: >-
            Cancelled amount in minor unit. If the amount is lower than the
            originally authorized amount, it is a partial cancel.
          format: int64
        timestamp:
          type: string
          description: Timestamp for the cancel event at the PSP
          format: date-time
      additionalProperties: false
    CancelMITPaymentResponse:
      type: object
      properties:
        cancelId:
          type: string
          format: uuid
      additionalProperties: false
    CaptureMITPaymentRequest:
      required:
        - amount
        - captureIdentifier
        - timestamp
      type: object
      properties:
        captureIdentifier:
          minLength: 1
          type: string
          description: PSP's unique identifier for the capture to ensure idempotency
        amount:
          type: integer
          description: >-
            Captured amount in minor unit. If amount is lower than the
            originally authorized amount, it is a partial Capture.
          format: int64
        timestamp:
          type: string
          description: Timestamp for capture as known by the PSP.
          format: date-time
      additionalProperties: false
    CaptureMITPaymentResponse:
      type: object
      properties:
        captureId:
          type: string
          format: uuid
      additionalProperties: false
    CardType:
      required:
        - encryptedPanCallbackUrl
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: >-
            Allowed card type for the payment. These can be used:<br />MC-DEBIT:
            MasterCard Debit<br />MC-CREDIT: MasterCard Credit<br />ELEC-DEBIT:
            VISA Electron Debit<br />VISA-DEBIT: VISA Debit.<br />VISA-CREDIT:
            VISA Credit<br />DANKORT: Dankort<br />MTRO-DEBIT: Maestro Debit is
            deprecated and should not be used.
        encryptedPanCallbackUrl:
          minLength: 1
          type: string
          description: >-
            Url to make callback with encrypted PAN. Must be valid fully
            qualified HTTPS URL. Request is described here:
            [callbacks](https://developer.mobilepay.dk/docs/online/basics/callbacks).
        tokenCallbackUrl:
          type: string
          description: >-
            Url to make callback with Token. Must be valid fully qualified HTTPS
            URL. Request is described here:
            [callbacks](https://developer.mobilepay.dk/docs/online/basics/callbacks).
          nullable: true
      additionalProperties: false
    ConfirmCardUpdateRequest:
      required:
        - succeeded
      type: object
      properties:
        reasonCode:
          type: integer
          description: >-
            Reason code describing the reason for the card update to fail.<br
            />Codes:<br />1000: rejected<br />1001: rejected, insufficient
            funds<br />1003: rejected, card expired<br />1004: rejected, fraud
            suspected<br />1005: rejected, soft blocked<br />1006: rejected,
            hard blocked<br />1007: rejected, web payment disabled for card<br
            />1008: soft reject, 3DS stepup required, ThreeDSecureUrl must be
            supplied<br />1009: after a succesfull 3DS stepup, PSP now has
            crypto and will retry authorization<br />1010: reject for payment
            invalidation, don´t forget to also call /invalidate endpoint<br
            />2000: error<br />2001: error, permanent - don't try again<br
            />2002: error, temporary - try again<br />3000: timeout - try again
          format: int32
        reasonMessage:
          type: string
          description: Description of why the card update failed.
          nullable: true
        succeeded:
          type: boolean
          description: >-
            Property indicating whether or not the card update was successful.
            If false, reason code and reason message are required.
        threeDSecureUrl:
          type: string
          description: >-
            For reason code 1008 the 3DS (3DSecure) fallback flow is activated.
            The MobilePay app will open this url in a web view.
          format: uri
          nullable: true
        acquirerVatNumber:
          type: string
          description: >-
            The VAT number of the acquirer to uniquely identify the acquirer
            used for this card update. Must be given for all reason codes in the
            1000 range.<br />Used for our technical surveillance of the
            transactions and tracking errors.<br />Use the format described
            here: [VAT identification
            number](https://en.wikipedia.org/wiki/VAT_identification_number).<br
            />Examples:<br />Clearhaus: DK33749996<br />Bambora:
            SE556233942301<br />Elavon: IE418442<br />Handelsbanken:
            SE502007786201<br />Nets: DK20016175<br />Swedbank:
            SE502017775301<br />Valitor: IS23243<br />Wirecard: DE201591202
          nullable: true
        acquirerMerchantId:
          type: string
          description: >-
            The id of the merchant with the acquirer. Must be given for all
            reason codes in the 1000 range.
          nullable: true
        acquirerPaymentReference:
          type: string
          description: >-
            The id of the payment with the acquirer. Must be given for all
            reason codes in the 1000 range.
          nullable: true
      additionalProperties: false
    CreateCancelRequest:
      required:
        - amount
        - cancelIdentifier
        - timestamp
      type: object
      properties:
        cancelIdentifier:
          minLength: 1
          type: string
          description: The PSP's unique id of the cancel to ensure idempotency.
        amount:
          type: integer
          description: >-
            Cancelled amount in minor unit. If the amount is lower than the
            originally authorized amount, it is a partial cancel.
          format: int64
        timestamp:
          type: string
          description: Time of the cancel at the PSP.
          format: date-time
      additionalProperties: false
    CreateCancelResponse:
      type: object
      properties:
        cancelId:
          type: string
          description: MobilePay id of the cancel that has been created.
          format: uuid
      additionalProperties: false
    CreateCaptureRequest:
      required:
        - amount
        - captureIdentifier
        - timestamp
      type: object
      properties:
        captureIdentifier:
          minLength: 1
          type: string
          description: The PSP's unique id for the capture to ensure idempotency
        amount:
          type: integer
          description: >-
            Captured amount in minor unit. If the amount is lower than the
            originally authorized amount, it is a partial capture.
          format: int64
        timestamp:
          type: string
          description: Time of the capture at the PSP.
          format: date-time
        authorizationAttemptId:
          type: string
          description: >-
            Id of the authorization attempt that was authorized. This will
            ensure that we mark the correct authorization attempt as succeeded.
          format: uuid
          nullable: true
      additionalProperties: false
    CreateCaptureResponse:
      type: object
      properties:
        captureId:
          type: string
          description: MobilePay id of the capture that has been created.
          format: uuid
      additionalProperties: false
    CreateMerchantRequest:
      required:
        - billingCurrency
        - countryCode
        - externalId
        - merchantCategoryCode
        - name
        - vatNumber
      type: object
      properties:
        externalId:
          minLength: 1
          type: string
          description: The PSP's unique id of the merchant.
          example: aarhus-trading-20018
        merchantCategoryCode:
          maximum: 9999
          minimum: 1
          type: integer
          description: >-
            The merchant category code (MCC) is used to classify a business by
            the types of goods or services it provides. More information here:
            [MCC](https://en.wikipedia.org/wiki/Merchant_category_code).
          format: int32
          example: 1234
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The PSP's name of the merchant for billing purposes.
          example: Gedekid og Smoothies
        billingCurrency:
          minLength: 1
          type: string
          description: >-
            Billing currency of the merchant. Possible values are:<br /> DKK<br
            /> EUR<br /> SEK<br /> NOK
          example: DKK
        countryCode:
          minLength: 1
          type: string
          description: >-
            Merchant country code e.g. Denmark = DK. Use [ISO
            3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
          example: DK
        vatNumber:
          minLength: 1
          type: string
          description: The VAT number of the merchant.
          example: '11102248'
      additionalProperties: false
    CreateRefundRequest:
      required:
        - amount
        - refundIdentifier
        - timestamp
      type: object
      properties:
        refundIdentifier:
          minLength: 1
          type: string
          description: PSP's unique id of the refund to ensure idempotency.
        amount:
          type: integer
          description: >-
            Refunded amount in minor unit. If amount is lower than the
            originally authorized amount, it is a partial refund.
          format: int64
        timestamp:
          type: string
          description: Time of the refund at the PSP.
          format: date-time
      additionalProperties: false
    CreateRefundResponse:
      type: object
      properties:
        refundId:
          type: string
          description: MobilePay RefundId of the refund that has been created
          format: uuid
      additionalProperties: false
    CryptogramInfo:
      type: object
      properties:
        cryptogram:
          type: string
          nullable: true
        eci:
          type: string
          nullable: true
      additionalProperties: false
    EncryptedCardUpdateCallbackPayload:
      type: object
      properties:
        agreementId:
          type: string
          format: uuid
        paymentId:
          type: string
          format: uuid
        publicKeyId:
          type: integer
          format: int32
        cardType:
          type: string
          nullable: true
        cardData:
          type: string
          nullable: true
        cardDataType:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ExpirationDate:
      type: object
      properties:
        month:
          type: string
          nullable: true
        year:
          type: string
          nullable: true
      additionalProperties: false
    InitiatePaymentResponse:
      type: object
      properties:
        paymentId:
          type: string
          format: uuid
        redirectToMobilePayUrl:
          type: string
          description: Client side redirect for the user to enter MobilePay.
          nullable: true
        redirectToMobilePayAppUrl:
          type: string
          description: >-
            To avoid user interaction in the app switch from a native Android
            app, you can use this url instead of 'RedirectToMobilePayUrl'.
          nullable: true
      additionalProperties: false
    InitiatePaymentV3Request:
      required:
        - allowedCardTypes
        - amount
        - currencyCode
        - merchantId
        - merchantLogoUrl
        - merchantName
        - merchantOrderId
        - merchantUrl
        - pspReferenceId
        - publicKeyId
        - redirectFromMobilePayUrl
      type: object
      properties:
        merchantId:
          type: string
          description: >-
            Identifier for the Merchant. Originates from the CreateMerchant
            response.
          format: uuid
        merchantName:
          minLength: 1
          type: string
          description: >-
            The display name of the merchant shown to the end-user. Is used for
            'Dynamic Linking'. Must be the same as registered with the merchants
            Acquirer and in schemes.
        merchantLogoUrl:
          minLength: 1
          type: string
          description: >-
            The url of the logo shown to the end-user. Must be: 250x250 pixels,
            png or jpg served over a secure connection, must be https, and
            publicly available.
        merchantOrderId:
          minLength: 1
          type: string
          description: Merchant's order id.
        merchantUrl:
          minLength: 1
          type: string
          description: >-
            Url of the merchant. Max length 150 char. Is used for 'Dynamic
            Linking'. If the merchant doesn´t have a Url, use VAT number
            (international format) or use the merchantId from MobilePay, as this
            will also guarantee uniqueness.
        pspReferenceId:
          minLength: 1
          maxLength: 50
          type: string
          description: PSP's unique reference to payment.
        amount:
          type: integer
          description: Order amount in minor unit. I.e. 4,95 must be given as 495.
          format: int64
        currencyCode:
          minLength: 1
          type: string
          description: >-
            Currency of the order. Must be alphabetic or numeric ISO 4217 code.
            Accepted codes: DKK, EUR, NOK, SEK, USD, GBP, 208, 978, 578, 752,
            840, 826
        allowedCardTypes:
          type: array
          items:
            $ref: '#/components/schemas/CardType'
          description: >-
            Allowed card types for the payment, includes callback configuration
            per card type.
        publicKeyId:
          type: integer
          description: Id of the public key to be used for exchange of card data.
          format: int32
        redirectFromMobilePayUrl:
          minLength: 1
          type: string
          description: >-
            Where to redirect the user when the payment is complete. Must be
            fully qualified URL.
        failedPaymentCallbackUrl:
          type: string
          description: >-
            Url to be notified when a payment ends unsuccessful. Must be a fully
            qualified URL. Must be secured by TLS 1.2.<br />You're strongly
            encouraged to only set this property if your service handles the
            callback returned, i.e. reply with an http status 2xx for valid
            callbacks.
          format: uri
          default: null
          nullable: true
        isCheckout:
          type: boolean
          description: >-
            Is the payment a Checkout payment which will require the user to
            pick an address.
        addressCallbackUrl:
          type: string
          description: >-
            Url to make callback with chosen address data for Checkout payment.
            Request is described here
            [callbacks](https://developer.mobilepay.dk/docs/online/basics/callbacks).
          format: uri
          nullable: true
        deliveryAddressAllowed:
          type: boolean
          description: >-
            Is it possible to set the delivery address on this particular
            payment.
          nullable: true
        deliveryAddressDisallowedReasonCode:
          type: integer
          description: >-
            Reason code to indicate the reason choosing of delivery address has
            been disallowed.<br />1: Reason not given<br />2: Goods don't
            require physical delivery<br />3: 'Pick up at store' already
            selected in the Webshop<br />4:'Parcel Shop' already selected in the
            Webshop<br />5: Shop will select a parcelshop close to your home
          format: int32
          nullable: true
        deliveryLimitedTo:
          type: array
          items:
            type: string
          description: >-
            List of countries in which chosen countries can be. Must be in ISO
            3166-1 alfa-2 standard. If empty, no restrictions are imposed.
          nullable: true
        validUntil:
          type: string
          description: >-
            Indicate when the user shouldn't be able to accept the payment
            anymore (3DS or Checkout payments will override and extend the
            remaining time with 15min).<br />If not defined, a default offset of
            35 minutes is used. Value, if not null, should be in a valid UTC
            format, e.g. 2020-04-30T07:35:22.8743886+00:00 or
            2020-04-30T07:35+00:00.
          format: date-time
          nullable: true
        autoCapture:
          type: boolean
          description: >-
            Set to true, if the payment will be automatically captured.<br />In
            MobilePay the payment will then be marked as captured immediately
            after the authorization is successful. If false, you need to mark it
            as captured as usual.
        preferVisaPartOfVisaDankort:
          type: boolean
          description: >-
            If set to true, the Visa part of the Danish co-branded Visa/Dankort
            will be preferred over the Dankort part. The card type given in the
            callback from MobilePay must still be respected.
        customerLanguageCode:
          type: string
          description: >-
            Override the default language code for the payment.<br />Accepted
            values are DA|EN|FI.
          nullable: true
        minimumMobilePayUserAge:
          maximum: 150
          minimum: 0
          type: integer
          description: >-
            Optional. The payment will fail if the MobilePay user age is below
            the given minimum age.
          format: int32
          nullable: true
      additionalProperties: false
    MITPaymentDetailsResponse:
      required:
        - allowedCardTypes
        - amount
        - currencyCode
        - merchantId
        - merchantLogoUrl
        - merchantName
        - merchantOrderId
        - merchantUrl
      type: object
      properties:
        merchantId:
          type: string
          description: The id of the Merchant.
          format: uuid
        merchantName:
          minLength: 1
          type: string
          description: The display name of the merchant shown to the end-user.
        merchantLogoUrl:
          minLength: 1
          type: string
          description: The url of the logo shown to the end-user.
        merchantOrderId:
          minLength: 1
          type: string
          description: Unique reference to order.
        merchantUrl:
          minLength: 1
          type: string
          description: Url of the merchant.
        pspReferenceId:
          type: string
          nullable: true
        amount:
          type: integer
          description: Order amount in minor unit. Ie. kr. 4,95 will be 495.
          format: int64
        currencyCode:
          minLength: 1
          type: string
          description: Currency of the order. Must be alphabetic ISO 4217 code.
        allowedCardTypes:
          type: array
          items:
            type: string
          description: >-
            Allowed card type for the payment. These can be used:<br />MC-DEBIT:
            MasterCard Debit<br />MC-CREDIT: MasterCard Credit<br />ELEC-DEBIT:
            VISA Electron Debit<br />VISA-DEBIT: VISA Debit.<br />VISA-CREDIT:
            VISA Credit<br />DANKORT: Dankort<br />MTRO-DEBIT: Maestro Debit is
            deprecated and should not be used.
      additionalProperties: false
    MastercardTokenCallbackPayload:
      required:
        - cardDataType
        - tokenMethod
      type: object
      properties:
        agreementId:
          type: string
          format: uuid
        paymentId:
          type: string
          format: uuid
        cardType:
          type: string
          nullable: true
        cardIssuedInCountryCode:
          type: string
          nullable: true
        maskedCardNumber:
          type: string
          nullable: true
        tokenData:
          $ref: '#/components/schemas/McTokenData'
        cardDataType:
          minLength: 1
          type: string
          readOnly: true
        tokenMethod:
          minLength: 1
          type: string
          readOnly: true
      additionalProperties: false
    McDynamicData:
      type: object
      properties:
        dynamicDataType:
          type: string
          nullable: true
        dynamicDataValue:
          type: string
          nullable: true
      additionalProperties: false
    McToken:
      type: object
      properties:
        paymentToken:
          type: string
          nullable: true
        tokenExpirationMonth:
          type: string
          nullable: true
        tokenExpirationYear:
          type: string
          nullable: true
        paymentAccountReference:
          type: string
          nullable: true
      additionalProperties: false
    McTokenData:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/McToken'
        dynamicData:
          $ref: '#/components/schemas/McDynamicData'
        eci:
          type: string
          nullable: true
      additionalProperties: false
    MerchantCreateResponse:
      type: object
      properties:
        merchantId:
          type: string
          format: uuid
      additionalProperties: false
    MerchantDetailsResponse:
      type: object
      properties:
        merchantId:
          type: string
          format: uuid
        externalId:
          type: string
          description: "The PSP's unique id of the merchant.\r\nValue may be null."
          nullable: true
        name:
          type: string
          description: "The PSP's name of the merchant for billing purposes.\r\nValue may be null."
          nullable: true
        billingCurrency:
          type: string
          description: >-
            The billing currency of the merchant. Possible values are:<br />
            DKK<br /> EUR<br /> SEK<br /> NOK
          nullable: true
        countryCode:
          type: string
          description: >-
            The merchant country code. fx Denmark: DK. More information here:
            [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
          nullable: true
        vatNumber:
          type: string
          description: "The merchant's VAT number.\r\nValue may be null."
          nullable: true
        merchantCategoryCode:
          type: integer
          description: "The MCC is used to classify a business by the types of goods or services it provides. More information here [MCC](https://en.wikipedia.org/wiki/Merchant_category_code).\r\nValue may be null."
          format: int32
          nullable: true
      additionalProperties: false
    MerchantListResponse:
      type: object
      properties:
        merchants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantDetailsResponse'
          description: List of all existing merchants.
          nullable: true
      additionalProperties: false
    MerchantUpdateRequest:
      type: object
      properties:
        vatNumber:
          type: string
          description: The VAT number of the merchant.
          nullable: true
        externalId:
          type: string
          description: DEPRECATED
          nullable: true
        merchantCategoryCode:
          type: integer
          description: DEPRECATED
          format: int32
          nullable: true
        name:
          type: string
          description: DEPRECATED
          nullable: true
        billingCurrency:
          type: string
          description: DEPRECATED
          nullable: true
        countryCode:
          type: string
          description: DEPRECATED
          nullable: true
      additionalProperties: false
      description: >-
        Only set properties that should be updated.<br /> Empty or null
        properties are ignored.
    PaymentDetailsV3Response:
      required:
        - allowedCardTypes
        - amount
        - currencyCode
        - merchantId
        - merchantLogoUrl
        - merchantName
        - merchantOrderId
        - merchantUrl
        - publicKeyId
        - redirectFromMobilePayUrl
      type: object
      properties:
        merchantId:
          type: string
          description: The id of the Merchant.
          format: uuid
        merchantName:
          minLength: 1
          type: string
          description: The display name of the merchant shown to the end-user.
        merchantLogoUrl:
          minLength: 1
          type: string
          description: The url of the logo shown to the end-user.
        merchantOrderId:
          minLength: 1
          type: string
          description: Unique reference to order.
        merchantUrl:
          minLength: 1
          type: string
          description: Url of the merchant.
        pspReferenceId:
          type: string
          nullable: true
        amount:
          type: integer
          description: Order amount in minor unit. Ie. kr. 4,95 will be 495.
          format: int64
        currencyCode:
          minLength: 1
          type: string
          description: Currency of the order. Must be alphabetic ISO 4217 code.
        allowedCardTypes:
          type: array
          items:
            $ref: '#/components/schemas/CardType'
          description: >-
            Allowed card types for the payment, includes callback configuration
            per card type.
        preferVisaPartOfVisaDankort:
          type: boolean
          description: Whether VisaDankort is treated as Visa for the payment.
        publicKeyId:
          type: integer
          description: Id of the public key to be used for exchange of card data.
          format: int32
        redirectFromMobilePayUrl:
          minLength: 1
          type: string
          description: >-
            Where to redirect the user after finishing the payment. Must be
            fully qualified URL.
        deliveryAddressAllowed:
          type: boolean
          description: Flag to tell if delivery address is allowed for checkout payment
          nullable: true
        deliveryAddressDisallowedReasonCode:
          type: integer
          description: Reason code for not allowing delivery address for checkout payment
          format: int32
          nullable: true
      additionalProperties: false
    PaymentInstrument:
      type: object
      properties:
        last4:
          type: string
          nullable: true
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        paymentAccountReference:
          type: string
          nullable: true
      additionalProperties: false
    PaymentType:
      type: object
      properties:
        cardBrand:
          type: string
          nullable: true
      additionalProperties: false
    RefundMITPaymentRequest:
      required:
        - amount
        - refundIdentifier
        - timestamp
      type: object
      properties:
        refundIdentifier:
          minLength: 1
          type: string
          description: PSP's unique identifier for the refund to ensure idempotency.
        amount:
          type: integer
          description: >-
            Refunded amount in minor unit. If amount is lower than the
            originally authorized amount, it is a partial refund.
          format: int64
        timestamp:
          type: string
          description: Timestamp for refund as known by the PSP.
          format: date-time
      additionalProperties: false
    RefundMITPaymentResponse:
      type: object
      properties:
        refundId:
          type: string
          format: uuid
      additionalProperties: false
    TokenData:
      type: object
      properties:
        vPaymentDataID:
          type: string
          nullable: true
        cryptogramInfo:
          $ref: '#/components/schemas/CryptogramInfo'
        paymentInstrument:
          $ref: '#/components/schemas/PaymentInstrument'
        tokenInfo:
          $ref: '#/components/schemas/TokenInfo'
      additionalProperties: false
    TokenInfo:
      type: object
      properties:
        token:
          type: string
          nullable: true
        last4:
          type: string
          nullable: true
        expirationDate:
          $ref: '#/components/schemas/ExpirationDate'
      additionalProperties: false
    UpdateAuthorizationAttemptRequest:
      required:
        - succeeded
      type: object
      properties:
        reasonCode:
          type: integer
          description: >-
            Reason code describing the reason for the authorization to fail.<br
            />Codes:<br />1000: rejected<br />1001: rejected, insufficient
            funds<br />1003: rejected, card expired<br />1004: rejected, fraud
            suspected<br />1005: rejected, soft blocked<br />1006: rejected,
            hard blocked<br />1007: rejected, web payment disabled for card<br
            />1008: soft reject, 3DS stepup required, ThreeDSecureUrl must be
            supplied<br />1009: after a succesfull 3DS stepup, PSP now has
            crypto and will retry authorization<br />1010: reject for payment
            invalidation, don´t forget to also call /invalidate endpoint<br
            />2000: error<br />2001: error, permanent - don't try again<br
            />2002: error, temporary - try again<br />3000: timeout - try again
          format: int32
        reasonMessage:
          type: string
          description: Description of why the authorization failed.
          nullable: true
        succeeded:
          type: boolean
          description: >-
            Property indicating whether or not the authorization was successful.
            If false, reason code and reason message are required.
        acquirerVatNumber:
          type: string
          description: >-
            The VAT number of the acquirer to uniquely identify the acquirer
            used for this authorization attempt. Must be given for all reason
            codes in the 1000 range.<br />Used for our technical surveillance of
            the transactions and tracking errors.<br />Use the format described
            here:
            'https:\/\/en.wikipedia.org\/wiki\/VAT_identification_number'.<br
            />Examples:<br />Clearhaus: DK33749996<br />Bambora:
            SE556233942301<br />Elavon: IE418442<br />Handelsbanken:
            SE502007786201<br />Nets: DK20016175<br />Swedbank:
            SE502017775301<br />Valitor: IS23243<br />Wirecard: DE201591202
          nullable: true
        acquirerMerchantId:
          type: string
          description: >-
            The id of the merchant with the acquirer. Must be given for all
            reason codes in the 1000 range.
          nullable: true
        acquirerPaymentReference:
          type: string
          description: >-
            The id of the payment with the acquirer. Must be given for all
            reason codes in the 1000 range.
          nullable: true
        threeDSecureUrl:
          type: string
          description: >-
            For reason code 1008 the 3DS (3DSecure) fallback flow is activated.
            The MobilePay app will open this url in a web view.
          format: uri
          nullable: true
      additionalProperties: false
    UpdateMITPaymentRequest:
      required:
        - succeeded
      type: object
      properties:
        reasonCode:
          type: integer
          description: >-
            Reason code describing the reason for the authorization to fail.<br
            />Codes:<br />1000: rejected<br />1001: rejected, insufficient
            funds<br />1003: rejected, card expired<br />1004: rejected, fraud
            suspected<br />1005: rejected, soft blocked<br />1006: rejected,
            hard blocked<br />1007: rejected, web payment disabled for card<br
            />1008: soft reject, 3DS stepup required (unsupported for MIT, user
            not present)<br />2000: error<br />2001: error, permanent - don't
            try again<br />2002: error, temporary - try again<br />3000: timeout
            - try again
          format: int32
        reasonMessage:
          type: string
          description: Description of why the authorization failed.
          nullable: true
        succeeded:
          type: boolean
          description: >-
            Property indicating whether or not the authorization was successful.
            If false, reason code and reason message are required.
        acquirerVatNumber:
          type: string
          description: >-
            The VAT number of the acquirer to uniquely identify the acquirer
            used for this authorization attempt. Must be given for all reason
            codes in the 1000 range.<br />Used for our technical surveillance of
            the transactions and tracking errors.<br />Use the format described
            here: [VAT identification
            number](https://en.wikipedia.org/wiki/VAT_identification_number).<br
            />Examples:<br />Clearhaus: DK33749996<br />Bambora:
            SE556233942301<br />Elavon: IE418442<br />Handelsbanken:
            SE502007786201<br />Nets: DK20016175<br />Swedbank:
            SE502017775301<br />Valitor: IS23243<br />Wirecard: DE201591202
          nullable: true
        acquirerMerchantId:
          type: string
          description: >-
            The id of the merchant with the acquirer. Must be given for all
            reason codes in the 1000 range.
          nullable: true
        acquirerPaymentReference:
          type: string
          description: >-
            The id of the payment with the acquirer. Must be given for all
            reason codes in the 1000 range.
          nullable: true
      additionalProperties: false
    UpdatePaymentRequest:
      type: object
      properties:
        reservationExpireTimestamp:
          type: string
          description: >-
            The timestamp of where the reservation is known to expire. This must
            be patched when a successful authorization is made. Also it must be
            patched should the expiration be prolonged. No need to patch it if
            reservation is captured or cancelled.
          format: date-time
          nullable: true
        redirectFromMobilePayUrl:
          type: string
          description: >-
            The redirect url for the user when the payment is complete. Must be
            fully qualified url.
          nullable: true
      additionalProperties: false
    VisaTokenCallbackPayload:
      required:
        - cardDataType
        - isDelegatedAuthentication
        - tokenMethod
      type: object
      properties:
        agreementId:
          type: string
          format: uuid
        paymentId:
          type: string
          format: uuid
        cardType:
          type: string
          nullable: true
        cardIssuedInCountryCode:
          type: string
          nullable: true
        maskedCardNumber:
          type: string
          nullable: true
        tokenData:
          $ref: '#/components/schemas/TokenData'
        cardDataType:
          minLength: 1
          type: string
          readOnly: true
        tokenMethod:
          minLength: 1
          type: string
          readOnly: true
        isDelegatedAuthentication:
          type: boolean
          readOnly: true
      additionalProperties: false
    SimulateRequestByAliasRequest:
      required:
        - phoneNumber
      type: object
      properties:
        phoneNumber:
          type: string
        lastFourDigits:
          type: string
          description: >-
            Optional, if defined the user will select the first eligible card
            that where the last four digits match.
          nullable: true
      additionalProperties: false
